#
# dme-mult.amf 
#
# implementation of distributed mutual exclusion with
# "normal" nodes and pass nodes (as in "Automating Cut-off..")
#
#
process forward {
IDLE: [ Idle, token ] -> [ Idle, token2 ]
SND: [ Start, epsilon ] -> [ Idle, token2 ]
}

process critical {
ENTER:	[ Idle,  token2 ] -> [ Cs , in ]
LEAVE:	[ Cs , in ] -> [ Idle , token ]
}

topology {
  connectivity {
    critical 0 -- forward 0
    forward 0 -- critical 1
    critical 1 -- forward 1
    forward 1 -- critical 0
  }
  
  # insert two new elements (a forward and a critical) into the ring
  additionrule plain-add {
    create: critical x
    create: forward y
  
    require: forward a -- critical 0

    remove: var a -- critical 0
  
    add: var a -- var x
    add: var x -- var y
    add: var y -- critical 0
  }
  
  msgs {
  	( critical, token2, lpeer)
  	( critical, in, self)
    ( forward, token, lpeer)
  }
}

initialconfig {
 ( forward 0 SND )
}
